// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VehicleAuction.Web.Data;

#nullable disable

namespace VehicleAuction.Web.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250524180101_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VehicleAuction.Web.Models.Auction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("MinimumIncrement")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("StartingPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("VehicleId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VehicleId");

                    b.ToTable("Auctions");
                });

            modelBuilder.Entity("VehicleAuction.Web.Models.BankAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountHolder")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AccountNumber")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("BranchCode")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("IBAN")
                        .IsRequired()
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("BankAccounts");
                });

            modelBuilder.Entity("VehicleAuction.Web.Models.Bid", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("AuctionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId1")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AuctionId");

                    b.HasIndex("UserId");

                    b.HasIndex("UserId1");

                    b.ToTable("Bids");
                });

            modelBuilder.Entity("VehicleAuction.Web.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("AuthorizedPerson")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AuthorizedPersonPhone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("TaxNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("VehicleAuction.Web.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("VehicleAuction.Web.Models.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("ABS")
                        .HasColumnType("bit");

                    b.Property<bool>("ASR")
                        .HasColumnType("bit");

                    b.Property<bool>("AkilliBagajKapagi")
                        .HasColumnType("bit");

                    b.Property<bool>("AnahtarsizGiris")
                        .HasColumnType("bit");

                    b.Property<bool>("AndroidAuto")
                        .HasColumnType("bit");

                    b.Property<bool>("AppleCarPlay")
                        .HasColumnType("bit");

                    b.Property<bool>("AyaklaAcilanBagajKapagi")
                        .HasColumnType("bit");

                    b.Property<bool>("AynalarElektrikli")
                        .HasColumnType("bit");

                    b.Property<bool>("AynalarHafizali")
                        .HasColumnType("bit");

                    b.Property<bool>("AynalarIsitmali")
                        .HasColumnType("bit");

                    b.Property<bool>("Bluetooth")
                        .HasColumnType("bit");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CocukKilidi")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DeriKoltuk")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Distronic")
                        .HasColumnType("bit");

                    b.Property<bool>("ESP")
                        .HasColumnType("bit");

                    b.Property<bool>("ElektrikliCamlar")
                        .HasColumnType("bit");

                    b.Property<bool>("FarAdaptif")
                        .HasColumnType("bit");

                    b.Property<bool>("FonksiyonelDireksiyon")
                        .HasColumnType("bit");

                    b.Property<bool>("GeceGorusSistemi")
                        .HasColumnType("bit");

                    b.Property<bool>("GeriGorusKamerasi")
                        .HasColumnType("bit");

                    b.Property<bool>("Hardtop")
                        .HasColumnType("bit");

                    b.Property<bool>("HavaYastigiSurucu")
                        .HasColumnType("bit");

                    b.Property<bool>("HavaYastigiYolcu")
                        .HasColumnType("bit");

                    b.Property<bool>("HeadUpDisplay")
                        .HasColumnType("bit");

                    b.Property<bool>("HidrolikDireksiyon")
                        .HasColumnType("bit");

                    b.Property<bool>("HizSabitlemeSistemi")
                        .HasColumnType("bit");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Immobilizer")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsitmaliDireksiyon")
                        .HasColumnType("bit");

                    b.Property<bool>("Isofix")
                        .HasColumnType("bit");

                    b.Property<bool>("Klima")
                        .HasColumnType("bit");

                    b.Property<bool>("KoltuklarElektrikli")
                        .HasColumnType("bit");

                    b.Property<bool>("KoltuklarHafizali")
                        .HasColumnType("bit");

                    b.Property<bool>("KoltuklarIsitmali")
                        .HasColumnType("bit");

                    b.Property<bool>("KoltuklarSogutmali")
                        .HasColumnType("bit");

                    b.Property<bool>("KorNoktaUyariSistemi")
                        .HasColumnType("bit");

                    b.Property<bool>("KumasKoltuk")
                        .HasColumnType("bit");

                    b.Property<bool>("MerkeziKilit")
                        .HasColumnType("bit");

                    b.Property<int>("Mileage")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("OnGorusKamerasi")
                        .HasColumnType("bit");

                    b.Property<bool>("OnKoltukKolDayamasi")
                        .HasColumnType("bit");

                    b.Property<bool>("OtmKararanDikizAynasi")
                        .HasColumnType("bit");

                    b.Property<bool>("PanoramikCamTavan")
                        .HasColumnType("bit");

                    b.Property<bool>("ParkAsistani")
                        .HasColumnType("bit");

                    b.Property<bool>("ParkSensoruArka")
                        .HasColumnType("bit");

                    b.Property<bool>("ParkSensoruOn")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("RomorkCekiDemiri")
                        .HasColumnType("bit");

                    b.Property<bool>("SeritTakipSistemi")
                        .HasColumnType("bit");

                    b.Property<bool>("SogutmaliTorpido")
                        .HasColumnType("bit");

                    b.Property<bool>("StartStop")
                        .HasColumnType("bit");

                    b.Property<bool>("Sunroof")
                        .HasColumnType("bit");

                    b.Property<bool>("UcuncuSiraKoltuklar")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("UsbAux")
                        .HasColumnType("bit");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.Property<bool>("YokusKalkisDesteği")
                        .HasColumnType("bit");

                    b.Property<bool>("YolBilgisayari")
                        .HasColumnType("bit");

                    b.Property<bool>("YorgunlukTespitSistemi")
                        .HasColumnType("bit");

                    b.Property<bool>("ZirhliArac")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("VehicleAuction.Web.Models.Auction", b =>
                {
                    b.HasOne("VehicleAuction.Web.Models.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("VehicleAuction.Web.Models.BankAccount", b =>
                {
                    b.HasOne("VehicleAuction.Web.Models.User", "User")
                        .WithMany("BankAccounts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("VehicleAuction.Web.Models.Bid", b =>
                {
                    b.HasOne("VehicleAuction.Web.Models.Auction", "Auction")
                        .WithMany("Bids")
                        .HasForeignKey("AuctionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VehicleAuction.Web.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("VehicleAuction.Web.Models.User", null)
                        .WithMany("Bids")
                        .HasForeignKey("UserId1");

                    b.Navigation("Auction");

                    b.Navigation("User");
                });

            modelBuilder.Entity("VehicleAuction.Web.Models.Company", b =>
                {
                    b.HasOne("VehicleAuction.Web.Models.User", "User")
                        .WithOne()
                        .HasForeignKey("VehicleAuction.Web.Models.Company", "UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("VehicleAuction.Web.Models.User", b =>
                {
                    b.HasOne("VehicleAuction.Web.Models.Company", "Company")
                        .WithMany("Users")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Company");
                });

            modelBuilder.Entity("VehicleAuction.Web.Models.Auction", b =>
                {
                    b.Navigation("Bids");
                });

            modelBuilder.Entity("VehicleAuction.Web.Models.Company", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("VehicleAuction.Web.Models.User", b =>
                {
                    b.Navigation("BankAccounts");

                    b.Navigation("Bids");
                });
#pragma warning restore 612, 618
        }
    }
}
